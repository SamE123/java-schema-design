-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

DROP TABLE IF EXISTS person CASCADE;
DROP TABLE IF EXISTS "location" CASCADE;
DROP TABLE IF EXISTS person_interest CASCADE;
DROP TABLE IF EXISTS interest CASCADE;

CREATE TABLE IF NOT EXISTS public.person
(
    id serial NOT NULL,
    firstName character varying,
    lastName character varying,
    age integer,
    location_id serial,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.person
    IS 'Personal information';

CREATE TABLE IF NOT EXISTS public.location
(
    id serial NOT NULL,
    city character varying,
    "state" character varying,
    country character varying,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.location
    IS 'Location information';

CREATE TABLE IF NOT EXISTS public.person_interest
(
    person_id serial,
    interest_id serial
);

COMMENT ON TABLE public.person_interest
    IS 'Hobby table';

CREATE TABLE IF NOT EXISTS public.interest
(
    id serial NOT NULL,
    title character varying,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.interest
    IS 'interest description';

ALTER TABLE IF EXISTS public.person
    ADD FOREIGN KEY (location_id)
    REFERENCES public.location (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.person_interest
    ADD FOREIGN KEY (person_id)
    REFERENCES public.person (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.person_interest
    ADD FOREIGN KEY (interest_id)
    REFERENCES public.interest (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

--Question 5 location population

INSERT INTO "location" (city, "state", country)
VALUES ('Nashville', 'Tennessee', 'United States'), ('Memphis', 'Tennessee', 'United States'), ('Phoenix', 'Arizona', 'United States'), ('Denver', 'Colorado', 'United States');

--Question 6 person population

INSERT INTO person (firstName, lastName, age, location_id) VALUES 
('Chickie', 'Ourtic', 21, 1),
('Hilton', 'O''Hanley', 37, 1),
('Barbe', 'Purver', 50, 3),
('Reeta', 'Sammons', 34, 2),
('Abbott', 'Fisbburne', 49, 1),
('Winnie', 'Whines', 19, 4),
('Samantha', 'Leese', 35, 2),
('Edouard', 'Lorimer', 29, 1),
('Mattheus', 'Shaplin', 27, 3),
('Donnell', 'Corney', 25, 3),
('Wallis', 'Kauschke', 28, 3),
('Melva', 'Lanham', 20, 2),
('Amelina', 'McNirlan', 22, 4),
('Courtney', 'Holley', 22, 1),
('Sigismond', 'Vala', 21, 4),
('Jacquelynn', 'Halfacre', 24, 2),
('Alanna', 'Spino', 25, 3),
('Isa', 'Slight', 32, 1),
('Kakalina', 'Renne', 26, 3);


--Question 7 interest population

INSERT INTO interest (title) VALUES
('Programming'), ('Gaming'), ('Comptuers'), ('Music'), ('Movies'), ('Cooking'), ('Sports');

--Question 8 person_interest population

INSERT INTO person_interest (person_id, interest_id) VALUES 
(1, 1),
(1, 2),
(1, 6),
(2, 1),
(2, 7),
(2, 4),
(3, 1),
(3, 3),
(3, 4),
(4, 1),
(4, 2),
(4, 7),
(5, 6),
(5, 3),
(5, 4),
(6, 2),
(6, 7),
(7, 1),
(7, 3),
(8, 2),
(8, 4),
(9, 5),
(9, 6),
(10, 7),
(10, 5),
(11, 1),
(11, 2),
(11, 5),
(12, 1),
(12, 4),
(12, 5),
(13, 2),
(13, 3),
(13, 7),
(14, 2),
(14, 4),
(14, 6),
(15, 1),
(15, 5),
(15, 7),
(16, 2),
(16, 3),
(16, 4),
(17, 1),
(17, 3),
(17, 5),
(17, 7),
(18, 2),
(18, 4),
(18, 6),
(19, 1),
(19, 2),
(19, 3),
(19, 4),
(19, 5),
(19, 6),
(19, 7);


--9 Queries that increment age by 1 of the following users 


UPDATE person 
SET age = age + 1 
WHERE firstName = 'Chickie' AND lastName = 'Ourtic';

UPDATE person
SET age = age + 1
WHERE firstName = 'Winnie' AND lastName = 'Whines';

UPDATE person
SET age = age + 1 
WHERE firstName = 'Edouard' AND lastName = 'Lorimer';

UPDATE person
SET age = age + 1
WHERE firstName = 'Courtney' and lastName = 'Holley';

UPDATE person
SET age = age+1
WHERE firstName = 'Melva' and lastName = 'Lanham';

UPDATE person
SET age = age + 1
WHERE firstName= 'Isa' and lastName = 'Slight';

UPDATE person	
SET age = age + 1
WHERE firstName = 'Abbott' and lastName = 'Fisbburne';

UPDATE person
SET age = age + 1
WHERE firstName = 'Reeta' and lastName = 'Sammons';



--10 delete entries on request
--used using statements for quicker deletes

DELETE from person_interest
USING person 
WHERE person_interest.person_id = person.id AND 
	((person.firstName = 'Hilton' AND person.lastName = 'O''Hanley')
	OR (person.firstName = 'Alanna' AND person.lastName = 'Spino'));

DELETE from person 
WHERE (person.firstName = 'Hilton' AND person.lastName = 'O''Hanley')
	OR (person.firstName = 'Alanna' AND person.lastName = 'Spino');

	
--information gathering 

--find names of people using app
SELECT firstName, lastName from person;

--find names of people in nashville
SELECT firstName, lastName from person
INNER JOIN "location" ON person.location_id = location.id where 
city = 'Nashville';

	
--find number of people from each city 
SELECT city, count(city) from person 
INNER JOIN "location" on person.location_id = location.id
GROUP BY city;

--find number of people with each interests 
SELECT title, count(title) from person 
INNER JOIN person_interest as intID on person.id = intID.person_id
INNER JOIN interest on intID.interest_id = interest.id
GROUP BY title;

--find people who live in nashville and are interested in programming
SELECT firstName, lastName, city, title from person 
INNER JOIN "location" on person.location_id = location.id 
INNER JOIN person_interest on person.id = person_interest.person_id
INNER JOIN interest on person_interest.interest_id = interest.id
WHERE interest.title = 'Programming' AND city = 'Nashville'

--find people in each age range 20s, 30s, 40s 
SELECT 
	CASE 
		WHEN age BETWEEN 20 AND 29 THEN '20-29'
		WHEN age BETWEEN 30 AND 39 THEN '30-39'
		WHEN age BETWEEN 40 AND 49 THEN '40-49'
		ELSE 'OTHER'
	END AS age_range,
	(COUNT(*))
	FROM person
	GROUP BY age_range;


	
	


END;